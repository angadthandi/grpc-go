syntax = "proto3";

package calculator;
option go_package="calculator/calculatorpb";

message Nums {
    int64 num1 = 1;
    int64 num2 = 2;
}

message SumRequest {
    int64 first_number = 1;
    int64 second_number = 2;
}

message SumResponse {
    int64 sum_result = 1;
}

message PrimeRequest {
    int64 number = 1;
}

message PrimeResponse {
    int64 prime_result = 1;
}

message ComputeAverageRequest {
    int64 number = 1;
}

message ComputeAverageResponse {
    float average_result = 1;
}

message FindMaximumRequest {
    int64 number = 1;
}

message FindMaximumResponse {
    int64 max_result = 1;
}

message SquareRootRequest {
    int64 number = 1;
}

message SquareRootResponse {
    float number_root = 1;
}

service CalculatorService {
    // Unary
    rpc Sum(SumRequest) returns (SumResponse) {};

    // Server Streaming
    rpc PrimeNumberDecomposition(PrimeRequest) returns (stream PrimeResponse) {};

    // Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    // BiDi Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // Unary
    // error handling
    // this RPC will throw an exception if sent number is -ve
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}